name: Test and release

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master
jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
        requirements-level: [min, pypi, dev]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: inspirehep
          POSTGRES_PASSWORD: inspirehep
          POSTGRES_DB: inspirehep
          EXTRAS: elasticsearch7
        ports:
          - 5432:5432
      elasticsearch:
        image: inspirehep/elasticsearch:7.1.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          discovery.type: single-node
        ports:
          - 9200:9200
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python
        uses: actions/cache@master
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}

      - name: Prepare python dependencies
        run: |
          pip install --upgrade pip setuptools py
          pip install twine wheel coveralls requirements-builder
          requirements-builder -e ${{ env.EXTRAS }} --level=${{ matrix.requirements-level }} setup.py > .requirements.txt

      - name: Prepare devel requirements
        if: ${{ matrix.requirements-level == 'dev' }}
        run: requirements-builder -e ${{ env.EXTRAS }} --level=dev --req requirements-devel.txt setup.py > .requirements.txt

      - name: Install dependencies
        run: pip install -r .requirements.txt"

      - name: Install app
        run: pip install -e .[all,${{ env.EXTRAS }}]

      - name: Show python dependencies
        run: pip freeze

      - name: Run tests
          run: ./run-tests.sh

      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@v20201129
        with:
          parallel: true
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.python-version }}-${{ matrix.requirements-level }}
  Coveralls:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@v20201129
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

